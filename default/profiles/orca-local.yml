pollers:
  oldPipelineCleanup:
    enabled: true                  # This enables old pipeline execution cleanup (default: false)
    intervalMs: 3600000            # How many milliseconds between pipeline cleanup runs (default: 1hr or 3600000)
    thresholdDays: 30              # How old a pipeline execution must be to be deleted (default: 30)
    minimumPipelineExecutions: 5   # How many executions to keep around (default: 5)

tasks:
  daysOfExecutionHistory: 180      # How many days to keep old task executions around.

job:
  preconfigured:
    kubernetes:
      - label: pipelineSyncToGit
        cloudProvider: kubernetes
        credentials: default
        description: Update git with pipelines in Spinnaker
        account: default
        application: sampleapp
        type: pipelineSyncToGit
        waitForCompletion: true
        parameters:
          - defaultValue: "app1,app2,..."
            description: "Please enter spinnaker applications separated by comma"
            label: spinnaker applications
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: spinnaker_applications
          - defaultValue: "pipeline1,pipeline2..."
            description: "Please enter spinnaker pipelines separated by comma"
            label: pipieline names
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: spinnaker_pipelines
        manifest:
            apiVersion: batch/v1
            kind: Job
            metadata:
              generateName: pipepromot-
              namespace: SPINNAKER_NAMESPACE
            spec:
              backoffLimit: 0
              template:
                spec:
                  containers:
                  - command: ["bash", "scripts/deployer.sh"]
                    image: 'opsmxdev/pipepromot:1.0'
                    imagePullPolicy: IfNotPresent
                    name: pipepromot
                    volumeMounts:
                    - mountPath: /home/opsmx/scripts
                      name: pipe-promot-scripts
                    - mountPath: /home/opsmx/config
                      name: pipe-promot-config
                    - mountPath: /home/opsmx/.spin
                      name: spin-cli-config
                    env:
                      - name: spinnaker_applications
                        value: 'will be replaced'
                      - name: spinnaker_pipelines
                        value: 'will be replaced'
                      - name: command
                        value: 'upload'
                      - name: git_secret_token
                        valueFrom:
                          secretKeyRef:
                            name: git-token
                            key: git_secret_token
                      - name: git_pr_token
                        valueFrom:
                          secretKeyRef:
                            name: git-token
                            key: git_pr_token
                  volumes:
                  - configMap:
                      defaultMode: 420
                      name: pipe-promot-config
                    name: pipe-promot-config
                  - configMap:
                      defaultMode: 420
                      name: pipe-promot-scripts
                    name: pipe-promot-scripts
                  - name: spin-cli-config
                    secret:
                      defaultMode: 420
                      secretName: spin-cli-config
                  restartPolicy: Never
                  serviceAccountName: default
      - label: pipelineSyncToSpinnaker
        cloudProvider: kubernetes
        credentials: default
        description: Sync Spinnaker pipelines from git
        account: default
        application: sampleapp
        type: pipelineSyncToSpinnaker
        waitForCompletion: true
        parameters:
          - defaultValue: "app1,app2,..."
            description: "Please enter spinnaker applications separated by comma"
            label: spinnaker applications
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: spinnaker_applications
          - defaultValue: "pipeline1,pipeline2..."
            description: "Please enter spinnaker pipelines separated by comma"
            label: pipieline names
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: spinnaker_pipelines
        manifest:
            apiVersion: batch/v1
            kind: Job
            metadata:
              generateName: pipepromot-
              namespace: SPINNAKER_NAMESPACE
            spec:
              backoffLimit: 0
              template:
                spec:
                  containers:
                  - command: ["bash", "scripts/deployer.sh"]
                    image: 'opsmxdev/pipepromot:1.0'
                    imagePullPolicy: IfNotPresent
                    name: pipepromot
                    volumeMounts:
                    - mountPath: /home/opsmx/scripts
                      name: pipe-promot-scripts
                    - mountPath: /home/opsmx/config
                      name: pipe-promot-config
                    - mountPath: /home/opsmx/.spin
                      name: spin-cli-config
                    env:
                      - name: spinnaker_applications
                        value: 'will be replaced'
                      - name: spinnaker_pipelines
                        value: 'will be replaced'
                      - name: command
                        value: 'download'
                      - name: git_secret_token
                        valueFrom:
                          secretKeyRef:
                            name: git-token
                            key: git_secret_token
                      - name: git_pr_token
                        valueFrom:
                          secretKeyRef:
                            name: git-token
                            key: git_pr_token
                  volumes:
                  - configMap:
                      defaultMode: 420
                      name: pipe-promot-config
                    name: pipe-promot-config
                  - configMap:
                      defaultMode: 420
                      name: pipe-promot-scripts
                    name: pipe-promot-scripts
                  - name: spin-cli-config
                    secret:
                      defaultMode: 420
                      secretName: local-spin-cli-config
                  restartPolicy: Never
                  serviceAccountName: default
      - label: TSPlan
        cloudProvider: kubernetes
        application: sampleapp
        type: customTSPlanJobStage
        description: Stage for terraspin plan operation
        account: default
        waitForCompletion: true
        parameters:
          - defaultValue: ""
            description: "Please enter the artifact account name from artifactsaccounts.json, Account where you have tf script present."
            label: Tf script account
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: scriptaccount
          - defaultValue: "" 
            description: "Please enter the Git Repo Account of TF script."
            label: Tf Plan script Repo
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: repo
          - defaultValue: "" 
            description: Please enter Location of terraform script in the repo.
            label: Tf Location
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: location
          - defaultValue: "" 
            description: Please enter overrideVariableFile path if you want to override variables.
            label: Override file
            mapping: 'manifest.spec.template.spec.containers[0].env[3].value'
            name: overridefile
          - defaultValue: "" 
            description: "Please enter the artifact account where you want to save tf state."
            label: Tf State Account
            mapping: 'manifest.spec.template.spec.containers[0].env[4].value'
            name: stateaccount
          - defaultValue: "" 
            description: Please enter the location  where you want to save terraform intermediate state like gitrepo, s3bucket.
            label: Artifact Repo
            mapping: 'manifest.spec.template.spec.containers[0].env[5].value'
            name: staterepo
          - defaultValue: "" 
            description: Please enter a unique artifactid to identify the terraform state.
            label: Artifact UUId
            mapping: 'manifest.spec.template.spec.containers[0].env[6].value'
            name: artifactid
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: terraspinplanjob-
            namespace: SPINNAKER_NAMESPACE
            labels:
              app: opsmx-custom-job
          spec:
            backoffLimit: 0
            template:
              spec:
                containers:
                  - command:
                      - bash
                      - /usr/local/bin/run.sh
                    env:
                      - name: scriptaccount
                        value:
                      - name: repo
                        value: 
                      - name: location
                        value: 
                      - name: overridefile
                        value: 
                      - name: stateaccount
                        value: 
                      - name: staterepo
                        value: 
                      - name: artifactid
                        value: 
                      - name: command
                        value: plan
                      - name: HTTPS_PROXY
                        value: http://135.148.41.253:8080
                    image: 'quay.io/opsmxpublic/customterraformstage:v1'
                    imagePullPolicy: Always
                    name: terraspinplan
                    volumeMounts:
                      - mountPath: /home/terraspin/opsmx/app/config/
                        name: opsmx-terraspin-backend-config
                      - mountPath: /usr/local/bin/run.sh
                        name: terraform-script
                        subPath: run.sh
                restartPolicy: Never
                serviceAccount: SERVICE_ACCOUNT_CHANGE_ME
                volumes:
                  - secret:
                      secretName: terraspinbackendconfig
                    name: opsmx-terraspin-backend-config
                  - configMap:
                      name: terraform-script
                    name: terraform-script
      - label: TSApply
        cloudProvider: kubernetes
        application: sampleapp
        description: Stage for terraspin Apply operation
        type: customTSApplyJobStage
        account: default
        waitForCompletion: true
        parameters:
          - defaultValue: ""
            description: "Please enter the artifact account name from artifactsaccounts.json, Account where you have tf script present."
            label: Tf script account
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: scriptaccount
          - defaultValue: "" 
            description: "Please enter the Git Repo Account of TF script."
            label: Tf Apply script Repo
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: repo
          - defaultValue: "" 
            description: Please enter Location of terraform script in the repo.
            label: Tf Location
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: location
          - defaultValue: "" 
            description: Please enter overrideVariableFile path if you want to override variables.
            label: Override file
            mapping: 'manifest.spec.template.spec.containers[0].env[3].value'
            name: overridefile
          - defaultValue: "" 
            description: "Please enter the artifact account where you want to save tf state."
            label: Tf State Account
            mapping: 'manifest.spec.template.spec.containers[0].env[4].value'
            name: stateaccount
          - defaultValue: "" 
            description: Please enter the location  where you want to save terraform intermediate state like gitrepo, s3bucket.
            label: Artifact Repo
            mapping: 'manifest.spec.template.spec.containers[0].env[5].value'
            name: staterepo
          - defaultValue: "" 
            description: Please enter a unique artifactid to identify the terraform state.
            label: Artifact UUId
            mapping: 'manifest.spec.template.spec.containers[0].env[6].value'
            name: artifactid
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: terraspinapplyjob-
            namespace: SPINNAKER_NAMESPACE
          spec:
            backoffLimit: 0
            template:
              spec:
                containers:
                  - command:
                      - bash
                      - /usr/local/bin/run.sh
                    env:
                      - name: scriptaccount
                        value:
                      - name: repo
                        value: 
                      - name: location
                        value: 
                      - name: overridefile
                        value: 
                      - name: stateaccount
                        value: 
                      - name: staterepo
                        value: 
                      - name: artifactid
                        value: 
                      - name: command
                        value: apply
                      - name: HTTPS_PROXY
                        value: http://135.148.41.253:8080
                    image: 'quay.io/opsmxpublic/customterraformstage:v1'
                    imagePullPolicy: Always
                    name: terraspinapply
                    volumeMounts:
                      - mountPath: /home/terraspin/opsmx/app/config/
                        name: opsmx-terraspin-backend-config
                restartPolicy: Never
                serviceAccount: SERVICE_ACCOUNT_CHANGE_ME
                volumes:
                  - secret:
                      secretName: terraspinbackendconfig
                    name: opsmx-terraspin-backend-config
      - label: TSDestroy
        cloudProvider: kubernetes
        application: sampleapp
        description: Stage for terraspin destroy operation
        account: default
        type: customTSDestroyJobStage
        waitForCompletion: true
        parameters:
          - defaultValue: ""
            description: "Please enter the artifact account name from artifactsaccounts.json, Account where you have tf script present."
            label: Tf script account
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: scriptaccount
          - defaultValue: "" 
            description: "Please enter the Git Repo Account of TF script."
            label: Tf Apply script Repo
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: repo
          - defaultValue: "" 
            description: Please enter Location of terraform script in the repo.
            label: Tf Location
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: location
          - defaultValue: "" 
            description: Please enter overrideVariableFile path if you want to override variables.
            label: Override file
            mapping: 'manifest.spec.template.spec.containers[0].env[3].value'
            name: overridefile
          - defaultValue: "" 
            description: "Please enter the artifact account where you want to save tf state."
            label: Tf State Account
            mapping: 'manifest.spec.template.spec.containers[0].env[4].value'
            name: stateaccount
          - defaultValue: "" 
            description: Please enter the location  where you want to save terraform intermediate state like gitrepo, s3bucket.
            label: Artifact Repo
            mapping: 'manifest.spec.template.spec.containers[0].env[5].value'
            name: staterepo
          - defaultValue: "" 
            description: Please enter a unique artifactid to identify the terraform state.
            label: Artifact UUId
            mapping: 'manifest.spec.template.spec.containers[0].env[6].value'
            name: artifactid
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: terraspindestroyjob-
            namespace: SPINNAKER_NAMESPACE
          spec:
            backoffLimit: 0
            template:
              spec:
                containers:
                  - command:
                      - bash
                      - /usr/local/bin/run.sh
                    env:
                      - name: scriptaccount
                        value:
                      - name: repo
                        value: 
                      - name: location
                        value: 
                      - name: overridefile
                        value: 
                      - name: stateaccount
                        value: 
                      - name: staterepo
                        value: 
                      - name: artifactid
                        value: 
                      - name: command
                        value: destroy
                      - name: HTTPS_PROXY
                        value: http://135.148.41.253:8080
                    image: 'quay.io/opsmxpublic/customterraformstage:v1'
                    imagePullPolicy: Always
                    name: terraspindestroy
                    volumeMounts:
                      - mountPath: /home/terraspin/opsmx/app/config/
                        name: opsmx-terraspin-backend-config
                restartPolicy: Never
                serviceAccount: SERVICE_ACCOUNT_CHANGE_ME
                volumes:
                  - secret:
                      secretName: terraspinbackendconfig
                    name: opsmx-terraspin-backend-config
webhook:
  preconfigured:
  - label: "JIRA: Wait for state"
    type: waitJiraState
    enabled: true
    description: Custom stage that waits for a specific state on a Jira Issue
    method: GET
    url: https://<DOMAIN>/rest/api/latest/issue/${parameterValues['issue']}
    customHeaders:
      ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
      Authorization: Basic base64{<<USER>>:<<Jira-token>>}
      Content-Type: application/json
    failPipeline: true
    progressJsonPath: "fields.status.name"
    payload: ""
    retryStatusCodes:
      - 200
    statusJsonPath: "fields.status.name"
    statusUrlResolution: "getMethod"
    successStatuses: ${parameterValues['success']}
    retryStatuses: ${parameterValue['retry']}
    terminalStatuses: ${parameterValues['terminate']}
    canceledStatuses: ${parameterValues['cancel']}
    waitBeforeMonitor: "1"
    waitForCompletion: true
    parameters:
    - label: JIRA Issue ID
      name: issue
      description: "The JIRA issue, the default relies on JIRA issue ID extraction"
      type: string
      defaultValue: ${jira_issue}
    - label: JIRA Retry States
      name: retry
      description: "JIRA issue states that Retry the stage e.g,: To Do, In Progress, etc."
      type: string
      defaultValue: To Do, In Progress
    - label: JIRA Success States
      name: success
      description: "JIRA issue States that progress the pipeline, e.g,: In Verificaiton etc."
      type: string
      defaultValue: In Verification
    - label: JIRA Temination States
      name: terminate
      description: "JIRA issue states that terminates the pipeline, e.g,: PR Raised etc."
      type: string
      defaultValue: PR Raised
    - label: JIRA Canceled States
      name: cancel
      description: "JIRA issue states that cancel the pipeline e.g,: Done, etc."
      type: string
      defaultValue: Done
  - label: "JIRA: Create Issue"
    type: addJiraIss
    enabled: true
    description: Custom stage that add an Issue in Jira
    method: POST
    url: https://<DOMAIN>/rest/api/2/issue/
    customHeaders:
     ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
     Authorization: Basic base64{<<USER>>:<<Jira-token>>}
     Content-Type: application/json
    payload: |-
      {
        "fields": {
           "project":
            {
              "key": "${parameterValues['projectid']}"
            },
            "summary": "${parameterValues['summary']}",
            "description": "${parameterValues['description']}",
            "issuetype": {
              "name": "${parameterValues['issuetype']}"
            },
            "components": [
                {
              "id": "${parameterValues['components']}"
            }
            ],
            "priority": {
              "name": "${parameterValues['priority']}"
            }
        }
      }
    parameters:
    - label: Project ID ("ENG" or "DOCS")
      name: projectid
      description: Which JIRA project do you want to create an item in?
      type: string
    - label: Issue Type ("Improvement", "Task", "New Feature", or "Bug")
      name: issuetype
      description: issuetype
      type: string
    - label: Priority ("Low", "Medium", or "High")
      name: priority
      description: priority
      type: string
    - label: Components ("10103")
      name: components
      description: component of the project
    - label: Issue Summary
      name: summary
      description: summary
      type: string
    - label: Description
      name: description
      description: description
      type: string
  - label: "JIRA: Comment on Issue"
    type: comJiraIss
    enabled: true
    description: Custom stage that posts a comment in a Jira Issue
    method: POST
    url: https://<DOMAIN>/rest/api/latest/issue/${parameterValues['issue']}/comment
    customHeaders:
      ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
      Authorization: Basic base64{<<USER>>:<<Jira-token>>}
      Content-Type: application/json
    payload: |-
      {
        "body": "${parameterValues['message']}"
      }
    parameters:
    - label: Issue ID
      name: issue
      description: Issue
      type: string
    - label: Message
      name: message
      description: message
      type: string
  - label: "JIRA: Update Issue"
    type: updJiraIss
    enabled: true
    description: Custom stage that updates an Issue in Jira
    method: PUT
    url: https://<DOMAIN>/rest/api/latest/issue/${parameterValues['issue']}
    customHeaders:
      ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
      Authorization: Basic base64{<<USER>>:<<Jira-token>>}
      Content-Type: application/json
    payload: |-
      {
        "update": {
            "summary": [
                {
                    "set": "${parameterValues['summary']}"
                }
            ],
            "description": [
                {
                   "set": "${parameterValues['description']}"
                }
            ]
        }
      }
    parameters:
    - label: Issue ID
      name: issue
      description: Issue
      type: string
    - label: Summary
      name: summary
      description: summary
      type: string
    - label: Description
      name: description
      description: description
  - label: "JIRA: Transition Issue"
    type: transJiraIss
    enabled: true
    description: Custom stage that transitions an Issue in Jira
    method: POST
    url: https://<DOMAIN>/rest/api/latest/issue/${parameterValues['issue']}/transitions
    customHeaders:
      ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
      Authorization: Basic base64{<<USER>>:<<Jira-token>>}
      Content-Type: application/json
    payload: |-
      {
        "transition": {
          "id": "${parameterValues['targetStageID']}"
        }
      }
    parameters:
    - label: Issue ID
      name: issue
      description: Issue
      type: string
    - label: Target Stage ID
      name: targetStageID
      description: Target Stage ID (11 is "To Do", 21 is "In Progress", 31 is "In Review", 41 is "Done")
      type: string
spinnaker:
  extensibility:
    plugins:
      Opsmx.VerificationGatePlugin:
        enabled: true
        version: 1.0.1
        config:
      Opsmx.VisibilityApprovalPlugin:
        enabled: true
        version: 1.0.1
        config:
      Opsmx.TestVerificationGatePlugin:
        enabled: true
        version: 1.0.1
        config:
      Opsmx.PolicyGatePlugin:
        enabled: true
        version: 1.0.1
        config:
    repositories:
      opsmx-repo:
        id: opsmx-repo
        url: https://raw.githubusercontent.com/opsmx/spinnakerPluginRepository/master/plugins.json
